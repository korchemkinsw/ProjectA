# Generated by Django 2.2.9 on 2023-01-09 08:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import object_card.models
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clientele', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('enterprises', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('новый', 'Новый'), ('пультовой номер', 'Пультовой номер'), ('договор', 'Договор'), ('реагирование', 'Реагирование'), ('монтаж', 'Монтаж'), ('изменён', 'Изменён'), ('завершен', 'Завершен')], default='Новый', max_length=15, verbose_name='Статус заявки')),
                ('object_name', models.CharField(help_text='Название объекта', max_length=400, null=True, verbose_name='Название объекта')),
                ('phone', models.CharField(blank=True, help_text='Телефон на объекте', max_length=50, verbose_name='Телефон на объекте')),
                ('address', models.CharField(blank=True, help_text='Адрес', max_length=400, verbose_name='Адрес')),
                ('width', models.CharField(blank=True, help_text='широта', max_length=9, verbose_name='широта')),
                ('longitude', models.CharField(blank=True, help_text='долгота', max_length=9, verbose_name='долгота')),
                ('transmission', models.CharField(choices=[('andromeda', 'Си-Норд'), ('ritm', 'Ритм'), ('navigard', 'Навигард'), ('eldes', 'Eldes'), ('jablotron', 'Jablotron'), ('dx', 'DX'), ('other', 'Прочее оборудование')], max_length=20, verbose_name='СПИ')),
                ('note', models.CharField(blank=True, help_text='Примечание', max_length=200, verbose_name='Примечание')),
                ('qnote', models.CharField(blank=True, help_text='информация для ГБР', max_length=200, verbose_name='информация для ГБР')),
                ('generated', models.DateTimeField(blank=True, null=True, verbose_name='Дата создания')),
                ('changed', models.DateTimeField(blank=True, null=True, verbose_name='Дата изменения')),
                ('contract', models.ForeignKey(blank=True, help_text='Договор', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contract', to='clientele.Contract', verbose_name='Договор')),
            ],
            options={
                'verbose_name': 'Карточка объекта',
                'verbose_name_plural': 'Карточки объектов',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(blank=True, help_text='Номер объекта', max_length=8, verbose_name='Номер объекта')),
                ('device', models.CharField(blank=True, help_text='Прибор', max_length=20, verbose_name='Прибор')),
                ('note', models.CharField(blank=True, help_text='Примечание', max_length=200, verbose_name='Примечание')),
                ('none', models.CharField(blank=True, help_text='--пусто--', max_length=1, verbose_name='--пусто--')),
                ('changed_pult', models.DateTimeField(blank=True, null=True, verbose_name='Дата создания')),
                ('changed_tech', models.DateTimeField(blank=True, null=True, verbose_name='Дата изменения')),
                ('enginer_pult', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='enginer_pult', to=settings.AUTH_USER_MODEL, verbose_name='Инженер пульта')),
                ('technican', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='technican', to=settings.AUTH_USER_MODEL, verbose_name='Техник')),
            ],
            options={
                'verbose_name': 'Оборудование на объекте',
                'verbose_name_plural': 'Оборудование на объектах',
            },
        ),
        migrations.CreateModel(
            name='Partition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(help_text='№', verbose_name='№')),
                ('name', models.CharField(blank=True, help_text='Название раздела', max_length=20, verbose_name='Название раздела')),
                ('device', models.ForeignKey(help_text='ППК', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='partition', to='object_card.Device', verbose_name='ППК')),
            ],
            options={
                'verbose_name': 'Раздел',
                'verbose_name_plural': 'Разделы',
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(help_text='№', verbose_name='№')),
                ('name', models.CharField(blank=True, help_text='Название зоны', max_length=20, verbose_name='Название зоны')),
                ('device', models.ForeignKey(help_text='ППК', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='zones', to='object_card.Device', verbose_name='ППК')),
                ('partition', models.ForeignKey(help_text='Раздел', null=True, on_delete=django.db.models.deletion.CASCADE, to='object_card.Partition', verbose_name='Раздел')),
            ],
            options={
                'verbose_name': 'Зона',
                'verbose_name_plural': 'Зоны',
            },
        ),
        migrations.CreateModel(
            name='Sim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_sim', models.CharField(blank=True, choices=[('sim 1', 'sim 1'), ('sim 2', 'sim 2'), ('зам.', 'зам.'), ('блок', 'блок')], max_length=5, null=True, verbose_name='sim #')),
                ('iccid', models.CharField(blank=True, help_text='Номер SIM-карты', max_length=20, verbose_name='Номер SIM-карты')),
                ('msisdn', models.CharField(blank=True, help_text='Абонентский номер', max_length=11, verbose_name='Абонентский номер')),
                ('image', models.ImageField(blank=True, null=True, upload_to=object_card.models.Sim.generate_path, verbose_name='Фото sim-карты')),
                ('device', models.ForeignKey(help_text='ППК', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sim', to='object_card.Device', verbose_name='ППК')),
            ],
            options={
                'verbose_name': 'SIM-карта',
                'verbose_name_plural': 'SIM-карты',
            },
        ),
        migrations.CreateModel(
            name='Qteam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('основная', 'основная'), ('резервная', 'резервная')], default='основная', max_length=15, verbose_name='тип группы')),
                ('card', models.ForeignKey(help_text='Объект', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='card_qtem', to='object_card.Card', verbose_name='Объект')),
                ('qteam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='enterprises.Responseteam', verbose_name='Группа реагирования')),
            ],
            options={
                'verbose_name': 'Группа реагирования',
                'verbose_name_plural': 'Группы реагирования',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(help_text='№', verbose_name='№')),
                ('note', models.CharField(blank=True, max_length=50, null=True, verbose_name='Примечание')),
                ('application', models.CharField(blank=True, choices=[('MyAlarm', 'MyAlarm'), ('GeoRitm', 'GeoRitm'), ('PhoenixMK', 'PhoenixMK')], max_length=9, null=True, verbose_name='Приложение')),
                ('card', models.ForeignKey(help_text='Объект', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='card_person', to='object_card.Card', verbose_name='Объект')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clientele.Contact', verbose_name='Ответственное лицо')),
            ],
            options={
                'verbose_name': 'Ответственное лицо',
                'verbose_name_plural': 'Ответственные лица',
            },
        ),
        migrations.CreateModel(
            name='ImageSim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_sim', models.CharField(choices=[('sim 1', 'sim 1'), ('sim 2', 'sim 2')], max_length=5, verbose_name='sim #')),
                ('image', models.ImageField(blank=True, null=True, upload_to=object_card.models.ImageSim.generate_path, verbose_name='Фото sim-карты')),
                ('device', models.ForeignKey(help_text='ППК', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='image_sim', to='object_card.Device', verbose_name='ППК')),
            ],
            options={
                'verbose_name': 'Фотография sim-карты',
                'verbose_name_plural': 'Фотографии sim-карт',
            },
        ),
        migrations.CreateModel(
            name='HistoricalZone',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('number', models.PositiveIntegerField(help_text='№', verbose_name='№')),
                ('name', models.CharField(blank=True, help_text='Название зоны', max_length=20, verbose_name='Название зоны')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('device', models.ForeignKey(blank=True, db_constraint=False, help_text='ППК', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='object_card.Device', verbose_name='ППК')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('partition', models.ForeignKey(blank=True, db_constraint=False, help_text='Раздел', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='object_card.Partition', verbose_name='Раздел')),
            ],
            options={
                'verbose_name': 'historical Зона',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSim',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('part_sim', models.CharField(blank=True, choices=[('sim 1', 'sim 1'), ('sim 2', 'sim 2'), ('зам.', 'зам.'), ('блок', 'блок')], max_length=5, null=True, verbose_name='sim #')),
                ('iccid', models.CharField(blank=True, help_text='Номер SIM-карты', max_length=20, verbose_name='Номер SIM-карты')),
                ('msisdn', models.CharField(blank=True, help_text='Абонентский номер', max_length=11, verbose_name='Абонентский номер')),
                ('image', models.CharField(blank=True, max_length=100, null=True, verbose_name='Фото sim-карты')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('device', models.ForeignKey(blank=True, db_constraint=False, help_text='ППК', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='object_card.Device', verbose_name='ППК')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical SIM-карта',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalQteam',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('type', models.CharField(choices=[('основная', 'основная'), ('резервная', 'резервная')], default='основная', max_length=15, verbose_name='тип группы')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('card', models.ForeignKey(blank=True, db_constraint=False, help_text='Объект', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='object_card.Card', verbose_name='Объект')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('qteam', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='enterprises.Responseteam', verbose_name='Группа реагирования')),
            ],
            options={
                'verbose_name': 'historical Группа реагирования',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPerson',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('number', models.PositiveIntegerField(help_text='№', verbose_name='№')),
                ('note', models.CharField(blank=True, max_length=50, null=True, verbose_name='Примечание')),
                ('application', models.CharField(blank=True, choices=[('MyAlarm', 'MyAlarm'), ('GeoRitm', 'GeoRitm'), ('PhoenixMK', 'PhoenixMK')], max_length=9, null=True, verbose_name='Приложение')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('card', models.ForeignKey(blank=True, db_constraint=False, help_text='Объект', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='object_card.Card', verbose_name='Объект')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('person', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='clientele.Contact', verbose_name='Ответственное лицо')),
            ],
            options={
                'verbose_name': 'historical Ответственное лицо',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPartition',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('number', models.PositiveIntegerField(help_text='№', verbose_name='№')),
                ('name', models.CharField(blank=True, help_text='Название раздела', max_length=20, verbose_name='Название раздела')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('device', models.ForeignKey(blank=True, db_constraint=False, help_text='ППК', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='object_card.Device', verbose_name='ППК')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Раздел',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDevice',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('account', models.CharField(blank=True, help_text='Номер объекта', max_length=8, verbose_name='Номер объекта')),
                ('device', models.CharField(blank=True, help_text='Прибор', max_length=20, verbose_name='Прибор')),
                ('note', models.CharField(blank=True, help_text='Примечание', max_length=200, verbose_name='Примечание')),
                ('none', models.CharField(blank=True, help_text='--пусто--', max_length=1, verbose_name='--пусто--')),
                ('changed_pult', models.DateTimeField(blank=True, null=True, verbose_name='Дата создания')),
                ('changed_tech', models.DateTimeField(blank=True, null=True, verbose_name='Дата изменения')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('enginer_pult', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Инженер пульта')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('technican', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Техник')),
            ],
            options={
                'verbose_name': 'historical Оборудование на объекте',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCard',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('status', models.CharField(choices=[('новый', 'Новый'), ('пультовой номер', 'Пультовой номер'), ('договор', 'Договор'), ('реагирование', 'Реагирование'), ('монтаж', 'Монтаж'), ('изменён', 'Изменён'), ('завершен', 'Завершен')], default='Новый', max_length=15, verbose_name='Статус заявки')),
                ('object_name', models.CharField(help_text='Название объекта', max_length=400, null=True, verbose_name='Название объекта')),
                ('phone', models.CharField(blank=True, help_text='Телефон на объекте', max_length=50, verbose_name='Телефон на объекте')),
                ('address', models.CharField(blank=True, help_text='Адрес', max_length=400, verbose_name='Адрес')),
                ('width', models.CharField(blank=True, help_text='широта', max_length=9, verbose_name='широта')),
                ('longitude', models.CharField(blank=True, help_text='долгота', max_length=9, verbose_name='долгота')),
                ('transmission', models.CharField(choices=[('andromeda', 'Си-Норд'), ('ritm', 'Ритм'), ('navigard', 'Навигард'), ('eldes', 'Eldes'), ('jablotron', 'Jablotron'), ('dx', 'DX'), ('other', 'Прочее оборудование')], max_length=20, verbose_name='СПИ')),
                ('note', models.CharField(blank=True, help_text='Примечание', max_length=200, verbose_name='Примечание')),
                ('qnote', models.CharField(blank=True, help_text='информация для ГБР', max_length=200, verbose_name='информация для ГБР')),
                ('generated', models.DateTimeField(blank=True, null=True, verbose_name='Дата создания')),
                ('changed', models.DateTimeField(blank=True, null=True, verbose_name='Дата изменения')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contract', models.ForeignKey(blank=True, db_constraint=False, help_text='Договор', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='clientele.Contract', verbose_name='Договор')),
                ('device', models.ForeignKey(blank=True, db_constraint=False, help_text='ППК', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='object_card.Device', verbose_name='ППК')),
                ('director', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный за договор')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('individual', models.ForeignKey(blank=True, db_constraint=False, help_text='Физ.лицо', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='clientele.Individual', verbose_name='Физ.лицо')),
                ('legal', models.ForeignKey(blank=True, db_constraint=False, help_text='Юр.лицо', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='clientele.Legal', verbose_name='Юр.лицо')),
                ('manager', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный менеджер')),
                ('qteam', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='enterprises.Responseteam', verbose_name='Группа реагирования')),
            ],
            options={
                'verbose_name': 'historical Карточка объекта',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='GPS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gps', models.CharField(blank=True, help_text='координаты GPS', max_length=19, null=True, verbose_name='координаты GPS')),
                ('card', models.ForeignKey(help_text='Объект', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='card_gps', to='object_card.Card', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'координаты GPS',
                'verbose_name_plural': 'координаты GPS',
            },
        ),
        migrations.CreateModel(
            name='CardPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Описание', max_length=30, verbose_name='Описание')),
                ('image', models.ImageField(blank=True, upload_to=object_card.models.CardPhoto.generate_path, verbose_name='Фотография объекта')),
                ('card', models.ForeignKey(help_text='Объект', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='card_photo', to='object_card.Card', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Фотография объекта',
                'verbose_name_plural': 'Фотографии объектов',
            },
        ),
        migrations.AddField(
            model_name='card',
            name='device',
            field=models.ForeignKey(blank=True, help_text='ППК', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='control', to='object_card.Device', verbose_name='ППК'),
        ),
        migrations.AddField(
            model_name='card',
            name='director',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='director', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный за договор'),
        ),
        migrations.AddField(
            model_name='card',
            name='individual',
            field=models.ForeignKey(blank=True, help_text='Физ.лицо', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='individ_card', to='clientele.Individual', verbose_name='Физ.лицо'),
        ),
        migrations.AddField(
            model_name='card',
            name='legal',
            field=models.ForeignKey(blank=True, help_text='Юр.лицо', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='legal_card', to='clientele.Legal', verbose_name='Юр.лицо'),
        ),
        migrations.AddField(
            model_name='card',
            name='manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manager', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный менеджер'),
        ),
        migrations.AddField(
            model_name='card',
            name='qteam',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responseteam', to='enterprises.Responseteam', verbose_name='Группа реагирования'),
        ),
    ]
